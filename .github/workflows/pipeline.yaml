name: pipeline
on:
  push:
    branches:
      - "main"

permissions:
  packages: write

env:
  PORT: ${{ secrets.PORT }}
  B2_BUCKET_NAME: ${{ secrets.B2_BUCKET_NAME }}
  B2_BASE_URL: ${{ secrets.B2_BASE_URL }}
  BLUEPRINT_DB_HOST: ${{ secrets.BLUEPRINT_DB_HOST }}
  BLUEPRINT_DB_PORT: ${{ secrets.BLUEPRINT_DB_PORT }}
  BLUEPRINT_DB_USERNAME: ${{ secrets.BLUEPRINT_DB_USERNAME }}
  BLUEPRINT_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  BLUEPRINT_DB_DATABASE: ${{ secrets.BLUEPRINT_DB_DATABASE }}
  BLUEPRINT_DB_SCHEMA: ${{ secrets.BLUEPRINT_DB_SCHEMA }}
  SUPABASE_HOST: ${{ secrets.SUPABASE_HOST }}
  SUPABASE_SECRET: ${{ secrets.SUPABASE_SECRET }}

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
          
      - name: Install templ
        shell: bash
        run: go install github.com/a-h/templ/cmd/templ@latest
        
      - name: Run templ generate
        shell: bash
        run: templ generate -path .
        
      - name: Add all dependencies
        run: |
          go get github.com/a-h/templ
          go get github.com/a-h/templ/runtime
          go get github.com/pressly/goose/v3
          go get github.com/jackc/pgx/v5/pgconn@v5.7.4
          
      - name: Install dependencies and tidy
        run: go mod tidy
        
      - name: Build
        run: go build -v ./...
        
      - name: Test with the Go CLI
        run: go test ./...

  build-and-push-image:
    runs-on: ubuntu-latest
    needs:
      - run-tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/joachimhorshauge/lommeulken
          tags: |
            type=sha
            type=ref,event=branch

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/joachimhorshauge/lommeulken:latest
            ghcr.io/joachimhorshauge/lommeulken:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create env file
        run: |
          echo "GIT_COMMIT_HASH=${{ github.sha }}" > ./envfile
          echo "B2_ACCOUNT_ID=${{ secrets.B2_ACCOUNT_ID }}" >> ./envfile
          echo "B2_APPLICATION_KEY=${{ secrets.B2_APPLICATION_KEY }}" >> ./envfile
          echo "B2_APPLICATION_KEY_ID=${{ secrets.B2_APPLICATION_KEY_ID }}" >> ./envfile
          echo "B2_APPLICATION_KEY_NAME=${{ secrets.B2_APPLICATION_KEY_NAME }}" >> ./envfile
          echo "B2_BASE_URL=${{ secrets.B2_BASE_URL }}" >> ./envfile
          echo "B2_BUCKET_NAME=${{ secrets.B2_BUCKET_NAME }}" >> ./envfile
          echo "BLUEPRINT_DB_DATABASE=${{ secrets.BLUEPRINT_DB_DATABASE }}" >> ./envfile
          echo "BLUEPRINT_DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> ./envfile
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> ./envfile
          echo "BLUEPRINT_DB_HOST=${{ secrets.BLUEPRINT_DB_HOST }}" >> ./envfile
          echo "BLUEPRINT_DB_PORT=${{ secrets.BLUEPRINT_DB_PORT }}" >> ./envfile
          echo "BLUEPRINT_DB_SCHEMA=${{ secrets.BLUEPRINT_DB_SCHEMA }}" >> ./envfile
          echo "BLUEPRINT_DB_USERNAME=${{ secrets.BLUEPRINT_DB_USERNAME }}" >> ./envfile
          echo "PORT=${{ secrets.PORT }}" >> ./envfile
          echo "SUPABASE_HOST=${{ secrets.SUPABASE_HOST }}" >> ./envfile
          echo "SUPABASE_SECRET=${{ secrets.SUPABASE_SECRET }}" >> ./envfile

      - name: Docker Stack Deploy
        uses: cssnr/stack-deploy-action@v1
        with:
          name: lommeulken-stack
          file: docker-stack.yaml
          host: joachimhorshauge.dk
          user: deploy
          ssh_key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          env_file: ./envfile
