services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    restart: unless-stopped
    ports:
      - ${PORT}:${PORT}
    environment:
      APP_ENV: ${APP_ENV}
      PORT: ${PORT}
      BLUEPRINT_DB_HOST: ${BLUEPRINT_DB_HOST}
      BLUEPRINT_DB_PORT: ${BLUEPRINT_DB_PORT}
      BLUEPRINT_DB_DATABASE: ${BLUEPRINT_DB_DATABASE}
      BLUEPRINT_DB_USERNAME: ${BLUEPRINT_DB_USERNAME}
      BLUEPRINT_DB_PASSWORD: ${BLUEPRINT_DB_PASSWORD}
      BLUEPRINT_DB_SCHEMA: ${BLUEPRINT_DB_SCHEMA}
      SUPABASE_HOST: ${SUPABASE_HOST}
      SUPABASE_SECRET: ${SUPABASE_SECRET}
      B2_ACCOUNT_ID: ${B2_ACCOUNT_ID}
      B2_APPLICATION_KEY_ID: ${B2_APPLICATION_KEY_ID}
      B2_APPLICATION_KEY_NAME: ${B2_APPLICATION_KEY_NAME}
      B2_APPLICATION_KEY: ${B2_APPLICATION_KEY}
      B2_BUCKET_NAME: ${B2_BUCKET_NAME}
      B2_BASE_URL: ${B2_BASE_URL}
    depends_on:
      psql:
        condition: service_healthy
    networks:
      - blueprint
  psql:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${BLUEPRINT_DB_DATABASE}
      POSTGRES_USER: ${BLUEPRINT_DB_USERNAME}
      POSTGRES_PASSWORD: ${BLUEPRINT_DB_PASSWORD}
    ports:
      - "${BLUEPRINT_DB_PORT}:5432"
    volumes:
      - psql_volume_bp:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${BLUEPRINT_DB_USERNAME} -d ${BLUEPRINT_DB_DATABASE}'"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 15s
    networks:
      - blueprint
  migrations:
    image: kukymbr/goose-docker:3.24.2
    environment:
      - GOOSE_DRIVER=${GOOSE_DRIVER}
      - GOOSE_DBSTRING=${GOOSE_DBSTRING}
    volumes:
      - ./internal/database/sql/migrations:/migrations
    depends_on:
      psql:
        condition: service_healthy
    networks:
      - blueprint


volumes:
  psql_volume_bp:
networks:
  blueprint:
