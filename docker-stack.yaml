services:
  traefik:
    image: traefik:v3.1
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=lommeulken@joachimhorshauge.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      - mode: host
        protocol: tcp
        published: 443
        target: 443
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock

  web:
    image: ghcr.io/joachimhorshauge/lommeulken:${GIT_COMMIT_HASH:-latest}
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.web.loadbalancer.server.port=8080"
      - "traefik.http.routers.web.rule=Host(`joachimhorshauge.dk`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls.certresolver=myresolver"
    environment:
      APP_ENV: ${APP_ENV}
      PORT: ${PORT}
      BLUEPRINT_DB_USERNAME: postgres
      BLUEPRINT_DB_DATABASE: lommeulken
      BLUEPRINT_DB_PORT: 5432
      BLUEPRINT_DB_HOST: db
      BLUEPRINT_DB_PASSWORD: ${DB_PASSWORD}
      BLUEPRINT_DB_SCHEMA: public
      SUPABASE_HOST: ${SUPABASE_HOST}
      SUPABASE_SECRET: ${SUPABASE_SECRET}
      B2_ACCOUNT_ID: ${B2_ACCOUNT_ID}
      B2_APPLICATION_KEY_ID: ${B2_APPLICATION_KEY_ID}
      B2_APPLICATION_KEY_NAME: ${B2_APPLICATION_KEY_NAME}
      B2_APPLICATION_KEY: ${B2_APPLICATION_KEY}
      B2_BUCKET_NAME: ${B2_BUCKET_NAME}
      B2_BASE_URL: ${B2_BASE_URL}
    deploy:
      mode: replicated
      replicas: 3
    restart: always
    depends_on:
      - db

  db:
    image: postgres
    user: ${BLUEPRINT_DB_USERNAME}
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=postgres
      - POSTGRES_DB=lommeulken
      - POSTGRES_PORT=5432
      - POSTGRES_SSLMODE=disable
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:
  letsencrypt:

networks:
  app-net:
    driver: overlay
    attachable: true
